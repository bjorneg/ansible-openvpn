---

- name: Ensure OpenVPN is installed
  apt:
    name: openvpn
    state: present
    install_recommends: False

- name: Fill default values for connection definitions
  set_fact:
    #openvpn_connections: "{{ lookup('template', './update-connection-defaults.j2') }}"
    openvpn_connections: |
      {%- for item in openvpn_connections %}
      {% set _cfg = dict() %}
      {%- set _ = _cfg.update(openvpn_default_options) %}
      {%- set _ = _cfg.update(openvpn_default_options_group) %}
      {%- if 'server' in item or 'server-bridge' in item or 'tcp-server' in item %}
      {%-   set _ = _cfg.update(openvpn_default_server_options) %}
      {%-   set _ = _cfg.update(openvpn_default_server_options_group) %}
      {%- else %}
      {%-   set _ = _cfg.update(openvpn_default_client_options) %}
      {%-   set _ = _cfg.update(openvpn_default_client_options_group) %}
      {%- endif %}
      {%- set _ = _cfg.update(item) %}
      {%- set _ = item.update(_cfg) %}
      {%- endfor %}
      {{- openvpn_connections }}

- name: Generate OpenVPN configurations
  template:
    src: 'etc/openvpn/openvpn.conf.j2'
    dest: '/etc/openvpn/{{ item.name|replace(" ", "_") }}.conf'
    owner: 'root'
    group: 'adm'
    mode: '0600'
  with_items: [ '{{ openvpn_connections }}' ]
  when: item.name|default and not (item.delete|default)
  notify: [ 'Restart OpenVPN' ]


- name: Remove OpenVPN server configurations if requested
  file:
    dest: '/etc/openvpn/{{ item.name }}.conf'
    state: 'absent'
  with_items: [ '{{ openvpn_connections }}' ]
  notify: [ 'Restart OpenVPN' ]
  when: item.name|default and item.delete|default


- name: Ensure directory of ifconfig-pool-persist file exists
  file:
    dest: /var/lib/openvpn
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Ensure OpenVPN service is enabled
  service:
    name: openvpn
    enabled: True

